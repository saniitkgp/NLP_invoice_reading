df.loc[1:3, ['Name', 'Qualification']]    -> select row form 1 to 3  and columns name and qualificaiton only 

df[['Name', 'Qualification']]   -> select columns name and qualificaiton only 

df[df.columns[1:4]]     -> select columns from ind 1 to 3 and all rows

df.loc[0:3, 'Name':'Address']   -> select row from 0 to 3 and columns name to address.


data_df.iloc[:,0].values.tolist()   -> slicing based on index position  
https://www.geeksforgeeks.org/how-to-select-multiple-columns-in-a-pandas-dataframe/









def calculate_out_img_size(img, Filter=[None],Stride=[None],Polling=[None]):
    if len(img.shape) > 2:
        w,h,_= img.shape
    else:
        w,h =img.shape
        
    print('W = {}, H = {}'.format(w,h))
        
    for i in range(len(Filter)):
        f = Filter[i]
        p= Polling[i] if Polling[i] else 0
        s = Stride[i] if Stride[i] else 1
        
        w = ((w - f + 2 * p)/s) +1
        h = ((h - f + 2 * p)/s ) +1
        print('layer : ',i+1)
        print('new W = {}, new H = {}'.format(w,h))
            
        
		
W = 28, H = 28
layer :  1
new W = 26.0, new H = 26.0
layer :  2
new W = 13.0, new H = 13.0
layer :  3
new W = 11.0, new H = 11.0
layer :  4
new W = 10.0, new H = 10.0
layer :  5
new W = 8.0, new H = 8.0
layer :  6
new W = 4.0, new H = 4.0